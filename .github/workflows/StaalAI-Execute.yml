name: StaalAI-Execute

on:
  issue_comment:
    types: [created]

permissions:
  contents: write          # push commits
  pull-requests: write     # comment on PRs

jobs:
  run-staalai:
    # Only run when the comment is on a PR and contains the trigger phrase
    if: >
      github.event.issue.pull_request != null &&
      contains(github.event.comment.body, 'StaalAI: Execute')
    runs-on: ubuntu-latest

    env:
      RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

    steps:
      - name: Require label "StaalAI" and commenter permission >= write
        id: authz
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo  = context.repo.repo;
            const issue_number = context.payload.issue.number;
            const commenter = context.payload.comment.user.login;

            // Check commenter permission level
            const { data: perm } = await github.rest.repos.getCollaboratorPermissionLevel({
              owner, repo, username: commenter
            });
            const allowedPerms = ['write','maintain','admin'];
            const hasWriteOrAbove = allowedPerms.includes(perm.permission);

            // Ensure PR has label "StaalAI"
            const labels = await github.paginate(
              github.rest.issues.listLabelsOnIssue,
              { owner, repo, issue_number, per_page: 100 }
            );
            const hasLabel = labels.some(l => l.name.toLowerCase() === 'staalai');

            core.setOutput('hasWriteOrAbove', String(hasWriteOrAbove));
            core.setOutput('hasLabel', String(hasLabel));
            core.setOutput('ok', String(hasWriteOrAbove && hasLabel));

            if (!hasWriteOrAbove) core.info(`Commenter @${commenter} lacks write+ (has: ${perm.permission}).`);
            if (!hasLabel) core.info(`Label "StaalAI" not present on PR #${issue_number}.`);

      - name: Stop if not authorized / not labeled
        if: steps.authz.outputs.ok != 'true'
        run: |
          echo "Blocked: requires PR label 'StaalAI' AND commenter with write+ permissions." >&2
          exit 1

      - name: Set up GitHub CLI
        run: gh --version

      - name: Derive PR metadata
        id: prmeta
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          PR_NUMBER="${{ github.event.issue.number }}"
          HEAD_REF=$(gh pr view "$PR_NUMBER" --repo "${{ github.repository }}" --json headRefName --jq .headRefName)
          PR_TITLE=$(gh pr view "$PR_NUMBER" --repo "${{ github.repository }}" --json title --jq .title)

          echo "pr_number=$PR_NUMBER" >> "$GITHUB_OUTPUT"
          echo "head_ref=$HEAD_REF"   >> "$GITHUB_OUTPUT"
          echo "pr_title<<EOF"        >> "$GITHUB_OUTPUT"
          echo "$PR_TITLE"            >> "$GITHUB_OUTPUT"
          echo "EOF"                  >> "$GITHUB_OUTPUT"

      - name: Check out PR head branch
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.prmeta.outputs.head_ref }}
          fetch-depth: 0
          token: ${{ secrets.PAT }}

      - name: Configure Git user
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install Solurum.StaalAI dotnet tool (global)
        run: |
          dotnet tool install Solurum.StaalAI --global
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Run StaalAI generate
        env:
          StaalOpenApiToken: ${{ secrets.OPENAPITOKEN }}
          StaalOpenApiModel: ${{ vars.OPENAPIMODEL }}
        run: |
          StaalAI generate \
            -pf "$GITHUB_WORKSPACE/lastprompt.txt" \
            -wd "$GITHUB_WORKSPACE" \
            --debug

      - name: Commit and push changes (if any)
        id: commit
        env:
          PR_TITLE: ${{ steps.prmeta.outputs.pr_title }}
        run: |
          git add -A
          if git diff --cached --quiet; then
            echo "no_changes=true" >> "$GITHUB_OUTPUT"
            echo "No changes to commit."
          else
            COMMIT_MSG="StaalAI Suggests Code Changes for PR ${PR_TITLE}"
            git commit -m "$COMMIT_MSG"
            CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
            git push origin "$CURRENT_BRANCH"
            echo "no_changes=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Post PR comment with run result
        if: always()
        env:
          GH_TOKEN: ${{ secrets.PAT }}
          JOB_STATUS: ${{ job.status }}   # "success", "failure", "cancelled"
        run: |
          PR_NUMBER="${{ github.event.issue.number }}"

          # Changes line
          if [ "${{ steps.commit.outputs.no_changes }}" = "true" ]; then
            CHANGE_LINE="No changes were generated."
          else
            CHANGE_LINE="StaalAI pushed code changes."
          fi

          # Status line
          if [ "$JOB_STATUS" = "success" ]; then
            STATUS_LINE="✅ Pipeline **succeeded**."
          elif [ "$JOB_STATUS" = "cancelled" ]; then
            STATUS_LINE="⏹️ Pipeline **was cancelled**."
          else
            STATUS_LINE="❌ Pipeline **failed**."
          fi

          COMMENT_BODY="$STATUS_LINE\n\n$CHANGE_LINE\n\nView logs: $RUN_URL"
          gh pr comment "$PR_NUMBER" --repo "${{ github.repository }}" --body "$COMMENT_BODY"
