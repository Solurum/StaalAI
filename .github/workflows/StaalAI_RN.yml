name: StaalAI_RN

on:
  issues:
    types: [opened, reopened]
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: read

jobs:
  create-pr-from-issue:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'issue_comment' || github.event.issue.pull_request == null }}

    steps:
      - name: Check out master
        uses: actions/checkout@v4
        with:
          ref: master
          fetch-depth: 0

      - name: Set up Git user
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Ensure GitHub CLI is available
        run: gh --version

      - name: Create or checkout issue branch
        id: branch
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          BRANCH="issue-${ISSUE_NUMBER}"

          if git ls-remote --exit-code --heads origin "$BRANCH" > /dev/null 2>&1; then
            git fetch origin "$BRANCH"
            git checkout "$BRANCH"
            git pull --ff-only origin "$BRANCH"
          else
            git checkout -b "$BRANCH" master
          fi

          echo "branch_name=$BRANCH" >> "$GITHUB_OUTPUT"
          
      - name: Write lastprompt.txt with issue content (safe)
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          set -euo pipefail
      
          # Get the whole issue in one shot
          issue_json="$(gh issue view "${{ github.event.issue.number }}" \
            --repo "${{ github.repository }}" \
            --json title,body,comments)"
      
          # Extract fields
          title="$(printf '%s' "$issue_json" | jq -r '.title')"
          body="$(printf '%s' "$issue_json" | jq -r '.body')"
      
          # Build the file safely (no heredocs)
          {
            printf 'Title: %s\n\n' "$title"
            echo 'Description:'
            printf '%s\n\n' "$body"
            echo 'Comments:'
            printf '%s' "$issue_json" | jq -r '.comments[]?.body'
          } > lastprompt.txt


      - name: Commit and push changes
        run: |
          git add lastprompt.txt
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update lastprompt.txt for issue #${{ github.event.issue.number }}"
            git push origin "${{ steps.branch.outputs.branch_name }}"
          fi

      - name: Create or update Pull Request to master (title = issue title)
        id: pr
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          set -euo pipefail
      
          PR_TITLE="${{ github.event.issue.title }}"
          PR_BODY="Auto-generated from [issue #${{ github.event.issue.number }}](${{ github.event.issue.html_url }})."
          HEAD="${{ steps.branch.outputs.branch_name }}"
          BASE="master"
      
          # Try to create the PR (succeeds only if one doesn't already exist)
          if gh pr create \
              --title "$PR_TITLE" \
              --body "$PR_BODY" \
              --base "$BASE" \
              --head "$HEAD" >/dev/null 2>&1; then
            echo "Created new PR."
          else
            echo "PR likely exists. Updating itâ€¦"
            # Find existing PR number for this head branch
            PR_NUMBER="$(gh pr list --head "$HEAD" --state all --json number --jq '.[0].number')"
            if [ -z "${PR_NUMBER:-}" ]; then
              echo "Failed to find an existing PR for head '$HEAD' and creation failed." >&2
              exit 1
            fi
            gh pr edit "$PR_NUMBER" --title "$PR_TITLE" --body "$PR_BODY"
          fi
      
          # Output PR number for later steps
          PR_NUMBER="$(gh pr list --head "$HEAD" --state all --json number --jq '.[0].number')"
          echo "number=$PR_NUMBER" >> "$GITHUB_OUTPUT"


      - name: Comment on PR with prompt contents
        env:
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          gh pr comment "${{ steps.pr.outputs.number }}" \
            --repo "${{ github.repository }}" \
            --body-file lastprompt.txt
